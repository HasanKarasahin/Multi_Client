<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>