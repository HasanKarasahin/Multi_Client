<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        4c6qefP+A1/wAH8B6jI8AAAAAElFTkSuQmCC
</value>
  </data>
</root>